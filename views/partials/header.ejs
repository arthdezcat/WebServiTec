<header id="dynamic-header" class="header-light" style="--header-text:#222; --header-border:#444; --header-text-light:#fff; --header-border-light:#f1f1f1; --header-text-dark:#222; --header-border-dark:#444;">
    <nav class="navbar" style="background:transparent;box-shadow:none;padding:0;">
        <div class="menu-toggle" id="mobile-menu">
            <i class="fas fa-bars"></i>
        </div>
        <div class="logo">
            <a href="/" style="font-size:22px;font-weight:900;letter-spacing:1px;text-decoration:none;display:flex;align-items:center;gap:8px;">
                <img src="<%= homeInfo && homeInfo.logoUrl ? homeInfo.logoUrl : ' ' %>" alt="Logo" style="height:40px;width:40px;border-radius:50%;object-fit:cover;box-shadow:0 2px 8px rgba(0,0,0,0.12);background:#fff;padding:2px;cursor:pointer;" onclick="openLogoModal(event, this)" id="header-logo">
                <%= typeof homeInfo !== 'undefined' && homeInfo && homeInfo.nombreLocal ? homeInfo.nombreLocal : "Nombre" %>
            </a>
        </div>
        <ul class="nav-list">
            <li><a href="/">Inicio</a></li>
            <li><a href="/services"></i><%= homeInfo && homeInfo.TituloServicio1 ? homeInfo.TituloServicio1 : 'TituloServicio1' %></a></li>
            <li><a href="/galeria"></i><%= homeInfo && homeInfo.TituloServicio2 ? homeInfo.TituloServicio2 : 'TituloServicio2' %></a></li>
            <li><a href="/contact">Contactos</a></li>
        </ul>
        
        <!-- Overlay para cerrar el menú -->
        <div class="nav-overlay" id="nav-overlay"></div>
    </nav>

    <!-- Modal para mostrar el logo ampliado -->
    <div id="logo-modal" class="logo-modal">
        <div class="logo-modal-content">
            <span class="logo-modal-close" onclick="closeLogoModal()">&times;</span>
            <img id="logo-modal-img" src="<%= homeInfo && homeInfo.logoUrl ? homeInfo.logoUrl : '' %>" alt="Logo">
        </div>
    </div>

    <style>
    /* Header transparente y sticky */
    header {
        background-color: transparent !important;
        padding: 10px 10px;
        position: sticky;
        top: 0;
        z-index: 1000;
        box-shadow: none;
        transition: all 0.3s ease;
    }

    /* Navbar sin fondo ni sombra */
    .navbar {
        background: transparent !important;
        box-shadow: none !important;
        display: flex;
        justify-content: space-between;
        align-items: center;
        max-width: 1200px;
        margin: 0 auto;
        width: 100%;
        position: relative;
    }

    /* Logo link sin borde - Modo adaptativo */
    .logo a {
        text-decoration: none;
        font-size: 24px;
        font-weight: bold;
        display: flex;
        align-items: center;
        border-radius: 50px;
        padding: 6px 18px;
        background: transparent !important;
        transition: all 0.3s ease;
    }

    /* Estilos para el header en modo claro (fondo oscuro) */
    .header-light .logo a {
        color: var(--header-text-light);
    }

    .header-light .logo a:hover {
        opacity: 0.8;
    }

    /* Estilos para el header en modo oscuro (fondo claro) */
    .header-dark .logo a {
        color: var(--header-text-dark);
    }
    
    .header-dark .logo a:hover {
        opacity: 0.8;
    }

    /* Menú hamburguesa - Modo adaptativo */
    .menu-toggle {
        display: none;
        cursor: pointer;
        font-size: 28px;
        transition: color 0.3s ease;
    }
    
    .header-light .menu-toggle {
        color: var(--header-text-light);
    }
    
    .header-dark .menu-toggle {
        color: var(--header-text-dark);
    }

    /* Nav-list transparente */
    .nav-list {
        list-style: none;
        display: flex;
        gap: 24px;
        margin: 0;
        padding: 0;
        align-items: center;
        background: transparent !important;
        box-shadow: none !important;
    }

    /* Links principales con borde circular - Modo adaptativo */
    .nav-list li a {
        text-decoration: none;
        font-size: 17px;
        font-weight: 600;
        padding: 8px 18px;
        border-radius: 50px;
        background: transparent !important;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 6px;
    }

    /* Estilos para nav-list en modo claro (fondo oscuro) */
    .header-light .nav-list li a {
        color: var(--header-text-light);
        border: 2px solid var(--header-border-light);
    }

    .header-light .nav-list li a:hover {
        border-color: rgba(255, 255, 255, 0.7);
        color: rgba(255, 255, 255, 0.9) !important;
        background: rgba(255, 255, 255, 0.1);
    }

    /* Estilos para nav-list en modo oscuro (fondo claro) */
    .header-dark .nav-list li a {
        color: var(--header-text-dark);
        border: 2px solid var(--header-border-dark);
    }

    .header-dark .nav-list li a:hover {
        border-color: #888;
        color: #b48e5c !important;
        background: rgba(245, 245, 245, 0.1);
    }

    /* Modal del logo igual que antes */
    .logo-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        z-index: 9999;
        justify-content: center;
        align-items: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .logo-modal.active {
        display: flex;
        opacity: 1;
    }

    .logo-modal-content {
        max-width: 80%;
        max-height: 80%;
        position: relative;
        animation: zoomIn 0.3s ease;
    }

    .logo-modal-content img {
        display: block;
        max-width: 100%;
        max-height: 80vh;
        border-radius: 10px;
        border: 4px solid white;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
    }

    .logo-modal-close {
        position: absolute;
        top: -20px;
        right: -20px;
        font-size: 30px;
        color: white;
        background: rgba(0, 0, 0, 0.5);
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        border: 2px solid white;
        transition: all 0.2s;
    }

    .logo-modal-close:hover {
        background: rgba(0, 0, 0, 0.8);
        transform: scale(1.1);
    }

    @keyframes zoomIn {
        from {
            transform: scale(0.5);
            opacity: 0;
        }
        to {
            transform: scale(1);
            opacity: 1;
        }
    }

    @keyframes slideInLeft {
        from {
            transform: translateX(-100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }
    
    /* Estilo para detectores de fondo (invisibles para el usuario) */
    .bg-detector {
        visibility: hidden;
        position: absolute;
        z-index: -1;
        pointer-events: none;
    }

    /* Responsive */
    @media (max-width: 900px) {
      .navbar {
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding: 12px 20px;
      }
      
      .menu-toggle {
        order: 1;
        margin-left: 0;
        margin-right: auto;
      }
      
      .logo {
        order: 2;
        margin-left: auto;
      }
      
      .nav-list {
        gap: 12px !important;
        flex-wrap: wrap;
      }
    }

    @media (max-width: 768px) {
        .navbar {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            padding: 12px 20px;
        }
        
        .menu-toggle {
            display: block;
            order: 1;
            padding: 12px;
            border-radius: 6px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.15);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            margin-left: 0;
            margin-right: auto;
        }

        .logo {
            order: 2;
            margin-left: auto;
        }

        .menu-toggle:hover {
            background: rgba(255, 255, 255, 0.25);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .header-dark .menu-toggle {
            background: rgba(0, 0, 0, 0.15);
            border: 1px solid rgba(0, 0, 0, 0.2);
        }

        .header-dark .menu-toggle:hover {
            background: rgba(0, 0, 0, 0.25);
        }

        .nav-list {
            position: fixed;
            top: 0;
            left: -300px;
            width: 280px;
            height: 100vh;
            flex-direction: column;
            justify-content: flex-start;
            padding: 80px 0 40px 0;
            background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
            backdrop-filter: blur(20px);
            box-shadow: 5px 0 25px rgba(0, 0, 0, 0.3);
            z-index: 9999;
            transition: left 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            border-right: 1px solid rgba(255, 255, 255, 0.1);
            overflow-y: auto;
        }

        .nav-list::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 80px;
            background: transparent;
            display: flex;
            align-items: center;
            justify-content: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .nav-list::after {
            content: 'MENÚ PRINCIPAL';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: rgba(255, 255, 255, 0.7);
            font-size: 12px;
            font-weight: 600;
            letter-spacing: 2px;
            text-transform: uppercase;
        }

        .nav-list.active {
            left: 0;
            display: flex;
        }

        .nav-list li {
            margin: 0;
            padding: 0 20px;
            width: 100%;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }

        .nav-list li:last-child {
            border-bottom: none;
        }

        .nav-list li a {
            display: flex;
            align-items: center;
            padding: 18px 20px !important;
            margin: 0;
            border-radius: 0 !important;
            font-size: 16px !important;
            font-weight: 500 !important;
            transition: all 0.3s ease !important;
            background: transparent !important;
            border: none !important;
            color: rgba(255, 255, 255, 0.9) !important;
            text-decoration: none;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            border-left: 4px solid transparent;
        }

        .nav-list li a::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 4px;
            background: linear-gradient(180deg, #b48e5c 0%, #d4af37 100%);
            transform: scaleY(0);
            transition: transform 0.3s ease;
        }

        .nav-list li a:hover {
            background: rgba(255, 255, 255, 0.08) !important;
            color: #b48e5c !important;
            padding-left: 30px !important;
            box-shadow: inset 0 0 20px rgba(180, 142, 92, 0.1);
        }

        .nav-list li a:hover::before {
            transform: scaleY(1);
        }

        .nav-list li a:active {
            background: rgba(180, 142, 92, 0.2) !important;
        }

        /* Overlay para cerrar el menú */
        .nav-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0, 0, 0, 0.5);
            z-index: 9998;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .nav-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .logo-modal-content {
            max-width: 95%;
        }
        .logo-modal-close {
            top: -15px;
            right: -15px;
            width: 35px;
            height: 35px;
            font-size: 25px;
        }
    }

    @media (max-width: 480px) {
        .navbar {
            padding: 10px 15px;
        }
        
        .nav-list {
            width: 260px;
        }
        
        .nav-list li a {
            font-size: 15px !important;
            padding: 16px 18px !important;
        }
        
        .logo a {
            font-size: 16px !important;
            padding: 4px 10px !important;
        }
        
        .menu-toggle {
            font-size: 20px;
            padding: 8px;
        }
    }
    </style>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const mobileMenu = document.getElementById('mobile-menu');
        const navList = document.querySelector('.nav-list');
        const navOverlay = document.getElementById('nav-overlay');
        const header = document.getElementById('dynamic-header');
        
        // Función para abrir el menú lateral
        function openSidebar() {
            navList.classList.add('active');
            navOverlay.classList.add('active');
            document.body.style.overflow = 'hidden';
        }
        
        // Función para cerrar el menú lateral
        function closeSidebar() {
            navList.classList.remove('active');
            navOverlay.classList.remove('active');
            document.body.style.overflow = '';
        }
        
        // Alternar menú al hacer clic en hamburguesa
        mobileMenu.addEventListener('click', (e) => {
            e.stopPropagation();
            if (navList.classList.contains('active')) {
                closeSidebar();
            } else {
                openSidebar();
            }
        });
        
        // Cerrar menú al hacer clic en el overlay (fuera del menú)
        navOverlay.addEventListener('click', closeSidebar);
        
        // Cerrar menú al hacer clic fuera del sidebar y hamburguesa
        document.addEventListener('click', (e) => {
            if (window.innerWidth <= 768 && navList.classList.contains('active')) {
                // Si el clic no fue en el sidebar ni en el botón hamburguesa, cerrar
                if (!navList.contains(e.target) && !mobileMenu.contains(e.target)) {
                    closeSidebar();
                }
            }
        });

        // Prevenir que el menú se cierre al hacer clic dentro de él
        navList.addEventListener('click', (e) => {
            e.stopPropagation();
        });

        // Cierra el menú al hacer clic en un enlace (después de la navegación)
        navList.querySelectorAll('a').forEach(link => {
            link.addEventListener('click', () => {
                if(window.innerWidth <= 768) {
                    // Pequeño delay para permitir la navegación antes de cerrar
                    setTimeout(() => {
                        closeSidebar();
                    }, 100);
                }
            });
        });

        // Cerrar menú al cambiar el tamaño de ventana (si se vuelve grande)
        window.addEventListener('resize', () => {
            if (window.innerWidth > 768 && navList.classList.contains('active')) {
                closeSidebar();
            }
        });

        // Crear elementos para detectar el color de fondo
        createBackgroundDetectors();
        
        // Configurar la detección inicial
        setTimeout(checkBackgroundColor, 100);
        
        // Configurar la detección continua mientras se hace scroll
        window.addEventListener('scroll', debounce(checkBackgroundColor, 100));
        window.addEventListener('resize', debounce(checkBackgroundColor, 100));
    });
    
    // Función para crear detectores de fondo
    function createBackgroundDetectors() {
        const header = document.getElementById('dynamic-header');
        const headerRect = header.getBoundingClientRect();
        const headerHeight = headerRect.height;
        
        // Crear elementos invisibles para detectar color
        const detectors = [];
        const numDetectors = 5; // Número de puntos de detección
        
        for (let i = 0; i < numDetectors; i++) {
            const detector = document.createElement('div');
            detector.className = 'bg-detector';
            detector.style.cssText = `
                position: absolute;
                top: ${headerHeight / 2}px;
                left: ${(i / (numDetectors - 1)) * 100}%;
                width: 1px;
                height: 1px;
                pointer-events: none;
                opacity: 0;
            `;
            detector.id = `bg-detector-${i}`;
            header.appendChild(detector);
            detectors.push(detector);
        }
    }
    
    // Función para verificar el color de fondo y ajustar el header
    function checkBackgroundColor() {
        const header = document.getElementById('dynamic-header');
        const detectors = document.querySelectorAll('.bg-detector');
        let isDarkBackground = false;
        let detectedColors = [];
        
        detectors.forEach(detector => {
            const backgroundColor = getBackgroundColor(detector);
            detectedColors.push(backgroundColor);
            
            // Verificar si el color es oscuro
            if (isColorDark(backgroundColor)) {
                isDarkBackground = true;
            }
        });
        
        // Si la mayoría de los detectores están sobre un fondo oscuro
        const darkCount = detectedColors.filter(color => isColorDark(color)).length;
        if (darkCount > detectors.length / 2) {
            header.classList.remove('header-dark');
            header.classList.add('header-light');
        } else {
            header.classList.remove('header-light');
            header.classList.add('header-dark');
        }
    }
    
    // Función para obtener el color de fondo de un elemento
    function getBackgroundColor(element) {
        const style = window.getComputedStyle(element);
        const bgColor = style.backgroundColor;
        
        // Si es transparente, buscar en el elemento padre
        if (bgColor === 'rgba(0, 0, 0, 0)' || bgColor === 'transparent') {
            const parent = element.parentElement;
            if (parent) {
                return getBackgroundColor(parent);
            }
            return 'rgb(255, 255, 255)'; // Valor predeterminado
        }
        
        return bgColor;
    }
    
    // Función para determinar si un color es oscuro
    function isColorDark(color) {
        // Extraer valores RGB
        const match = color.match(/rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*[\d.]+)?\)/);
        if (!match) return false;
        
        const r = parseInt(match[1]);
        const g = parseInt(match[2]);
        const b = parseInt(match[3]);
        
        // Calcular brillo perceptivo
        // https://www.w3.org/TR/AERT/#color-contrast
        const brightness = (r * 299 + g * 587 + b * 114) / 1000;
        
        // Se considera oscuro si el brillo es menor a 128
        return brightness < 128;
    }
    
    // Función debounce para optimizar el rendimiento
    function debounce(func, wait) {
        let timeout;
        return function() {
            const context = this, args = arguments;
            clearTimeout(timeout);
            timeout = setTimeout(() => {
                func.apply(context, args);
            }, wait);
        };
    }

    // Funciones para manejar el modal del logo
    function openLogoModal(event, logoImg) {
        event.preventDefault(); // Prevenir la navegación
        const modal = document.getElementById('logo-modal');
        const modalImg = document.getElementById('logo-modal-img');
        
        // Asegurarse que la imagen del modal tenga la misma URL que el logo
        modalImg.src = logoImg.src;
        
        // Mostrar el modal con una animación
        modal.classList.add('active');
        
        // Evitar scroll en el body mientras el modal está abierto
        document.body.style.overflow = 'hidden';
    }
    
    function closeLogoModal() {
        const modal = document.getElementById('logo-modal');
        
        // Ocultar el modal con una animación
        modal.classList.remove('active');
        
        // Restaurar el scroll
        document.body.style.overflow = '';
    }
    
    // Cerrar el modal al hacer clic fuera de la imagen
    document.getElementById('logo-modal').addEventListener('click', function(event) {
        if (event.target === this) {
            closeLogoModal();
        }
    });
    
    // Cerrar el modal con la tecla ESC
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' && document.getElementById('logo-modal').classList.contains('active')) {
            closeLogoModal();
        }
    });
    </script>
</header>